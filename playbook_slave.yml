---
- name: Install and Configure PostgreSQL
  hosts: all
  become: yes  

  vars:
    postgres_version: "13"  
    postgres_db: "nsapoold07" 
    postgres_table: "user"  
    postgres_default_user: "postgres"
    postgres_new_user: "nsapool"  
    postgres_replication_user: "repluser"
    postgres_password: "marvin4242"
    primary_node_ip: 192.168.56.10
    secondary_node_ip: 192.168.56.11
    postgres_data_dir: /var/lib/postgresql/{{ postgres_version }}/main

  tasks:

    - name: Create user marvin
      user:
        name: marvin
        shell: "/bin/bash"
        create_home: yes
        password: "$6$bpt/oR05PTIJiVcF$WjPCL13AvpyjLvFTgzmMU1zUNGtb3vgzuXPSI.Bfai.oGPXdzTq7VKwnHRQoqzUV8H6HLtpqa6qpPyePsvk831"

    - name: Update apt repositories
      apt:
        update_cache: yes

    - name: Install PostgreSQL and dependencies
      apt:
        name: postgresql, ntp, python3-psycopg2
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add marvin to the postgres group
      user:
        name: marvin
        groups: postgres
        append: yes 

    - name: Ensure PostgreSQL is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Change the PostgreSQL default user password
      become: yes
      become_user: postgres
      postgresql_user:
        name: "{{ postgres_default_user }}"
        password: "{{ postgres_password }}"
      no_log: false

    - name: Set role attributes for the PostgreSQL default user
      become_user: postgres
      postgresql_user:
        name: "{{ postgres_default_user }}"
        role_attr_flags: SUPERUSER,CREATEDB,REPLICATION

    - name: Stop PostgreSQL service
      service:
        name: postgresql
        state: stopped

    - name: Stop PostgreSQL 13 service
      service:
        name: postgresql@13-main
        state: stopped

    - name: Remove old PostgreSQL data
      ansible.builtin.file:
        path: "{{ postgres_data_dir }}"
        state: absent

    - name: Create PostgreSQL data directory
      ansible.builtin.file:
        path: "{{ postgres_data_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'

    - name: Run pg_basebackup to clone primary
      become_user: postgres
      shell: >
        PGPASSWORD="{{ postgres_password }}" pg_basebackup
        -h {{ primary_node_ip }}
        -D {{ postgres_data_dir }}
        -U {{ postgres_replication_user }}
        -v -P -R -X stream -c fast
      environment:
        PGPASSWORD: "{{ postgres_password }}"

    - name: Create standby.signal file
      become_user: postgres
      file:
        path: "{{ postgres_data_dir }}/standby.signal"
        state: touch

    - name: Copy backup script from host to vm
      become: yes
      copy:
        src: /home/armeldemarsac/vagrant/backup.sh
        dest: /home/marvin/backup.sh
        remote_src: no
        owner: marvin
        group: marvin
        mode: '0755' 

    - name: Ensure PostgreSQL is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Run the backup script
      become: yes
      become_user: marvin
      command: ./backup.sh
      args:
        chdir: /home/marvin/

    
  handlers:
  - name: restart postgresql
    service:
      name: postgresql
      state: restarted

